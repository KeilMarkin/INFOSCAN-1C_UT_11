
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастройкиУстройства = Справочники.isc_Настройки.Выбрать(,,,"Код Возр");
	Пока НастройкиУстройства.Следующий() Цикл  
		ДобавитьУстройствоНаСервере(НастройкиУстройства);  
	КонецЦикла;	
	
	СткНастройки = Справочники.isc_Настройки.ПолучитьНастройкиУстройстваПоУмолчанию();
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СткНастройки,,"МетодыХранения,СоответствиеУпаковок");
	ЭтаФорма.МетодыХранения.Загрузить(СткНастройки.МетодыХранения);
	ЭтаФорма.СоответствиеУпаковок.Загрузить(СткНастройки.СоответствиеУпаковок);   	
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)  
	
	СохранитьНастройкиНаСервере();
	ЭтаФорма.ДанныеНаФормеИзменены = Ложь; 
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаСервере() 

	СткНастройки = Новый Структура("Логирование,МетодыХранения,СоответствиеУпаковок");
	ЗаполнитьЗначенияСвойств(СткНастройки, ЭтаФорма);
	Настройки = Справочники.isc_Настройки.НайтиПоКоду("000000001");
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Настройки = Справочники.isc_Настройки.СоздатьЭлемент();
		Настройки.Код = "000000001";
	Иначе
		Настройки = Настройки.ПолучитьОбъект();
	КонецЕсли;	
	ЗаполнитьЗначенияСвойств(Настройки, СткНастройки);
	Настройки.МетодыХранения.Загрузить(ЭтаФорма.МетодыХранения.Выгрузить());
	Настройки.СоответствиеУпаковок.Загрузить(ЭтаФорма.СоответствиеУпаковок.Выгрузить());
	Настройки.Записать();
	ОбщегоНазначения.СообщитьПользователю("Настройки сохранены!");  
	
КонецПроцедуры

&НаКлиенте
Процедура ТестСоединения(Команда)  
	
	Если Элементы.СтраницыУстройства.ПодчиненныеЭлементы.Количество() = 1 Тогда
		ИмяНастройки = "000000001";	
	Иначе	
		ИмяНастройки = СтрЗаменить(Элементы.СтраницыУстройства.ТекущаяСтраница.Имя, "Стр", "");
	КонецЕсли;
	УспешноПодключились = УстановитьСоединениеНаСервере(ИмяНастройки);
	Если УспешноПодключились Тогда
		ПоказатьОповещениеПользователя("Успешно!",,"Успешно подключение к устройству.", БиблиотекаКартинок.ПиктограммаПоказателяЦельДостигнута);	
	Иначе
		ПоказатьОповещениеПользователя("Ошибка подключения",,"Не удалось установить подключение к оборудованию. Проверьте настройки.", БиблиотекаКартинок.НовостиВажные);
	КонецЕсли;  
	
КонецПроцедуры 

&НаКлиенте
Процедура СохранитьУстройство(Команда) 
	
	ИмяНастройки = СтрЗаменить(Элементы.СтраницыУстройства.ТекущаяСтраница.Имя, "Стр", "");
	СохранитьУстройствоНаСервере(ИмяНастройки); 
	ПоказатьОповещениеПользователя("Успешно!",,"Устройство сохранено.", БиблиотекаКартинок.ПиктограммаПоказателяЦельДостигнута);
	
КонецПроцедуры


&НаКлиенте
Процедура УдалитьУстройство(Команда) 
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ВопросПередУдалением", ЭтотОбъект), "Настройки устройства будут удалены безвозвратно. Продолжить?", РежимДиалогаВопрос.ДаНет,,, "Предупреждение");	

КонецПроцедуры


&НаКлиенте
Процедура ВопросПередУдалением(РезультатВопроса, ПараметрыЗаписи) Экспорт	 
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда	
		ИмяНастройки = СтрЗаменить(Элементы.СтраницыУстройства.ТекущаяСтраница.Имя, "Стр", "");
		УдалитьУстройствоНаСервере(ИмяНастройки);
		ПоказатьОповещениеПользователя("Успешно!",,"Устройство удалено.", БиблиотекаКартинок.ПиктограммаПоказателяЦельДостигнута);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьУстройствоНаСервере(ИмяНастройки)

	спр = Справочники.isc_Настройки.НайтиПоКоду(ИмяНастройки);
	Если ЗначениеЗаполнено(спр) Тогда
	     спр.ПолучитьОбъект().Удалить(); 
		 Элементы.Удалить(Элементы["Стр" + ИмяНастройки]);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СохранитьУстройствоНаСервере(ИмяНастройки)

	устр = Справочники.isc_Настройки.НайтиПоКоду(ИмяНастройки);
	Если ЗначениеЗаполнено(устр) Тогда
	     устр = устр.ПолучитьОбъект();
	 Иначе
		 устр = Справочники.isc_Настройки.СоздатьЭлемент();
	 КонецЕсли;                                             
	 
	устр.Код 						= Этаформа["Код" + ИмяНастройки];
	устр.Наименование 				= Этаформа["Наименование" + ИмяНастройки]; 
	устр.АдресУстройства 			= Этаформа["IP" + ИмяНастройки];
	устр.Логин 			 			= Этаформа["Login" + ИмяНастройки];
	устр.Пароль 		 			= Этаформа["Pass" + ИмяНастройки];
	устр.Порт 			 			= Этаформа["Port" + ИмяНастройки];
	устр.ЗащищенноеСоединение 		= Этаформа["SSL" + ИмяНастройки];
	устр.EndPoint 			 		= ЭтаФорма["EndPoint" + ИмяНастройки];
    устр.Записать();
	Элементы["Стр" + ИмяНастройки].Заголовок = устр.Наименование; 
	
КонецПроцедуры


&НаСервере
Функция УстановитьСоединениеНаСервере(ИмяНастройки)
	
	  	СткНастройки = Новый Структура("АдресУстройства,Логин,Пароль,Порт,ЗащищенноеСоединение,EndPoint,Логирование");
		СткНастройки.АдресУстройства 			= Этаформа["IP" + ИмяНастройки];
		СткНастройки.Логин 			 			= Этаформа["Login" + ИмяНастройки];
		СткНастройки.Пароль 		 			= Этаформа["Pass" + ИмяНастройки];
		СткНастройки.Порт 			 			= Этаформа["Port" + ИмяНастройки];
		СткНастройки.ЗащищенноеСоединение 		= Этаформа["SSL" + ИмяНастройки];
		СткНастройки.EndPoint 			 		= ЭтаФорма["EndPoint" + ИмяНастройки];
		СткНастройки.Логирование 	 			= Этаформа.Логирование;
	  
	  Возврат Обработки.isc_РаботаСУстройством.УстановитьСоединенияНаСервере(Истина, Ложь, СткНастройки); 
	  
КонецФункции

&НаСервере
Процедура МетодыХраниенияМетодХраненияВГХПриИзмененииНаСервере(МетодХраненияВГХ, Примечание, Свойство)
	
	Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПустаяСсылка();
		
	Если МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.РеквизитыУпаковки ИЛИ МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.РеквизитыНоменклатуры Тогда		
		Примечание = "Укажите реквизит";
	Иначе
		Примечание = "Укажите свойство";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МетодыХраниенияМетодХраненияВГХПриИзменении(Элемент) 
	
	Примечание = "";
	Свойство = Неопределено;
	МетодыХраниенияМетодХраненияВГХПриИзмененииНаСервере(Элементы.МетодыХранения.ТекущиеДанные.МетодХраненияВГХ,Примечание, Свойство);
	Элементы.МетодыХранения.ТекущиеДанные.Примечание = Примечание;
	
КонецПроцедуры

&НаСервере
Процедура МетодыХраниенияСвойствоПриИзмененииНаСервере(МетодХраненияВГХ, Примечание)
	
	Если МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.ДопРеквизитыНоменклатуры   Тогда
		Примечание = "Габарит будет записываться в доп реквизит номенклатуры.";
	ИначеЕсли МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.ДопРеквизитыХарактеристики Тогда
		Примечание = "Габарит будет записываться в доп. реквизит характеристики.";  
	ИначеЕсли МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.ДопСведенияНоменклатуры Тогда
		Примечание = "Габарит будет записываться в регистр доп.сведение номенклатуры.";
	ИначеЕсли МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.ДопСведенияХарактеристики Тогда
		Примечание = "Габарит будет записываться в регистр доп.сведение характеристики.";
	ИначеЕсли МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.РеквизитыУпаковки Тогда		
		Примечание = "Габарит будет записываться в указанный реквизит справочника УпаковкиЕдиницыИзмерения";
	ИначеЕсли МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.РеквизитыНоменклатуры Тогда		
		Примечание = "Габарит будет записываться в указанный реквизит справочника Номенклатура";		
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура МетодыХраниенияСвойствоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Примечание = "";
	Если Элементы.МетодыХранения.ТекущиеДанные.МетодХраненияВГХ = ПредопределенноеЗначение("Перечисление.isc_МетодХраненияВГХ.РеквизитыУпаковки")  ИЛИ Элементы.МетодыХранения.ТекущиеДанные.МетодХраненияВГХ = ПредопределенноеЗначение("Перечисление.isc_МетодХраненияВГХ.РеквизитыНоменклатуры") Тогда	
		сзРеквизитов = Новый СписокЗначений;
		сзРеквизитов = ПолучитьсзРеквизитов(Элементы.МетодыХранения.ТекущиеДанные.МетодХраненияВГХ);
		ВыбЭлемент = сзРеквизитов.ВыбратьЭлемент("Укажите реквизит в котором хранится измерение."); 
		Элементы.МетодыХранения.ТекущиеДанные.Примечание = "Измерение будет записано в указанный реквизит";
		Если НЕ ВыбЭлемент = Неопределено Тогда
			Элементы.МетодыХранения.ТекущиеДанные.Свойство_ИмяРеквизита = ВыбЭлемент.Значение;
		КонецЕсли;
	Иначе
		Свойство = ПредопределенноеЗначение("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПустаяСсылка");
		ВвестиЗначение(Свойство);
		МетодыХраниенияСвойствоПриИзмененииНаСервере(Элементы.МетодыХранения.ТекущиеДанные.МетодХраненияВГХ, Примечание);
		Элементы.МетодыХранения.ТекущиеДанные.Примечание = Примечание;
		Элементы.МетодыХранения.ТекущиеДанные.Свойство_ИмяРеквизита = Свойство;
	КонецЕсли;

КонецПроцедуры 

&НаСервере
Функция ПолучитьсзРеквизитов(МетодХраненияВГХ) 
	
	сзРеквизиты = НОвый СписокЗначений; 
	Если МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.РеквизитыУпаковки Тогда
		ТипРеквизита = Тип("СправочникСсылка.УпаковкиЕдиницыИзмерения");                                                               
	Иначе
		ТипРеквизита = Тип("СправочникСсылка.Номенклатура");
	КонецЕсли;
	Для Каждого элем Из Метаданные.НайтиПоТипу(ТипРеквизита).Реквизиты Цикл
		сзРеквизиты.Добавить(элем.Имя, Элем.Синоним);
	КонецЦикла;
	Возврат сзРеквизиты; 
	
КонецФункции	

&НаКлиенте
Процедура ДанныеФормы_ПриИзменении(Элемент)
	ЭтаФорма.ДанныеНаФормеИзменены = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУстройство(Команда)
	ДобавитьУстройствоНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДобавитьУстройствоНаСервере(Знач НастройкиУстройства = Неопределено)

	Если НастройкиУстройства = Неопределено Тогда
		НастройкиУстройства = Справочники.isc_Настройки.СоздатьЭлемент(); 
		НастройкиУстройства.УстановитьНовыйКод();
	КонецЕсли;	
	
	//Определяем массив добавляемых реквизитов

	ДобавляемыеРеквизиты = Новый Массив; 
	НовыйРеквизит = Новый РеквизитФормы("IP" + НастройкиУстройства.Код,Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(500)),,"Адрес устройства"); 
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизит); 
	НовыйРеквизит = Новый РеквизитФормы("EndPoint" + НастройкиУстройства.Код,Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(500)),,"EndPoint"); 
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
	НовыйРеквизит = Новый РеквизитФормы("Port" + НастройкиУстройства.Код,Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(5,0)),,"Порт"); 
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизит); 
	НовыйРеквизит = Новый РеквизитФормы("SSL" + НастройкиУстройства.Код,Новый ОписаниеТипов("Булево"),,"Защищенное соединение(https)"); 
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
	НовыйРеквизит = Новый РеквизитФормы("Login" + НастройкиУстройства.Код,Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(150)),,"Логин"); 
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
	НовыйРеквизит = Новый РеквизитФормы("Pass" + НастройкиУстройства.Код,Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(150)),,"Пароль"); 
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);	
	НовыйРеквизит = Новый РеквизитФормы("Код" + НастройкиУстройства.Код,Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(500)),,"Код устройства"); 
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизит); 
	НовыйРеквизит = Новый РеквизитФормы("Наименование" + НастройкиУстройства.Код,Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(500)),,"Наименование"); 
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизит); 

	ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты); 
	
	ЭтаФорма["Код" + НастройкиУстройства.Код] 			= НастройкиУстройства.Код; 
	ЭтаФорма["Наименование" + НастройкиУстройства.Код] 	= НастройкиУстройства.Наименование; 
	ЭтаФорма["IP" + НастройкиУстройства.Код] 			= НастройкиУстройства.АдресУстройства;
    ЭтаФорма["EndPoint" + НастройкиУстройства.Код] 		= НастройкиУстройства.EndPoint;
    ЭтаФорма["Port" + НастройкиУстройства.Код] 			= НастройкиУстройства.Порт;
    ЭтаФорма["SSL" + НастройкиУстройства.Код] 			= НастройкиУстройства.ЗащищенноеСоединение;
    ЭтаФорма["Login" + НастройкиУстройства.Код] 		= НастройкиУстройства.Логин;
    ЭтаФорма["Pass" + НастройкиУстройства.Код] 			= НастройкиУстройства.Пароль;
	
	СтраницаУстройства = Элементы.Добавить("Стр" + НастройкиУстройства.Код, Тип("ГруппаФормы"), Элементы.СтраницыУстройства);
	СтраницаУстройства.Вид = ВидГруппыФормы.Страница;
	СтраницаУстройства.Заголовок = НастройкиУстройства.Наименование; 
	
	НовыйЭлемент = ЭтаФорма.Элементы.Добавить("Наименование" + НастройкиУстройства.Код, Тип("ПолеФормы"), СтраницаУстройства);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Наименование" + НастройкиУстройства.Код; 
    Если НастройкиУстройства.Код = "000000001" Тогда
		НовыйЭлемент.ТолькоПросмотр = Истина;	
	КонецЕсли;	
	ГруппаАдресУстройства = Элементы.Добавить("ГруппаАдресУстройства" + НастройкиУстройства.Код,  Тип("ГруппаФормы"), СтраницаУстройства); 
	ГруппаАдресУстройства.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаАдресУстройства.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ГруппаАдресУстройства.Отображение = ОтображениеОбычнойГруппы.Нет;       
	ГруппаАдресУстройства.ОтображатьЗаголовок = Ложь;
	
	НовыйЭлемент = ЭтаФорма.Элементы.Добавить("IP" + НастройкиУстройства.Код, Тип("ПолеФормы"), ГруппаАдресУстройства);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "IP" + НастройкиУстройства.Код;  
	НовыйЭлемент.ПодсказкаВвода = "192.168.1.100";
	НовыйЭлемент.Ширина = 11;
	НовыйЭлемент.РастягиватьПоГоризонтали = Ложь;

	НовыйЭлемент = ЭтаФорма.Элементы.Добавить("EndPoint" + НастройкиУстройства.Код, Тип("ПолеФормы"), ГруппаАдресУстройства);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "EndPoint" + НастройкиУстройства.Код; 
	НовыйЭлемент.ПодсказкаВвода = "/api/data";

		
	ГруппаПорт = Элементы.Добавить("ГруппаПорт" + НастройкиУстройства.Код,  Тип("ГруппаФормы"), СтраницаУстройства); 
	ГруппаПорт.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаПорт.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ГруппаПорт.Отображение = ОтображениеОбычнойГруппы.Нет;  
	ГруппаПорт.ОтображатьЗаголовок = Ложь;

	НовыйЭлемент = ЭтаФорма.Элементы.Добавить("Port" + НастройкиУстройства.Код, Тип("ПолеФормы"), ГруппаПорт);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Port" + НастройкиУстройства.Код;
	
	НовыйЭлемент = ЭтаФорма.Элементы.Добавить("SSL" + НастройкиУстройства.Код, Тип("ПолеФормы"), ГруппаПорт);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
	НовыйЭлемент.ПутьКДанным = "SSL" + НастройкиУстройства.Код;
    НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;

    НовыйЭлемент = ЭтаФорма.Элементы.Добавить("Login" + НастройкиУстройства.Код, Тип("ПолеФормы"), СтраницаУстройства);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Login" + НастройкиУстройства.Код;
	НовыйЭлемент.Подсказка = "user";
	
	НовыйЭлемент = ЭтаФорма.Элементы.Добавить("Pass" + НастройкиУстройства.Код, Тип("ПолеФормы"), СтраницаУстройства);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Pass" + НастройкиУстройства.Код;
	НовыйЭлемент.Подсказка = "user";
	
	
	ГруппаКнопки = Элементы.Добавить("ГруппаКнопки" + НастройкиУстройства.Код,  Тип("ГруппаФормы"), СтраницаУстройства); 
	ГруппаКнопки.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаКнопки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ГруппаКнопки.Отображение = ОтображениеОбычнойГруппы.Нет;       
	ГруппаКнопки.ОтображатьЗаголовок = Ложь;
	
	НовыйЭлемент = ЭтаФорма.Элементы.Добавить("КнопкаТестСоединения" + НастройкиУстройства.Код, Тип("КнопкаФормы"),ГруппаКнопки);
	НовыйЭлемент.ИмяКоманды = "ТестСоединения"; 
	
	НовыйЭлемент = ЭтаФорма.Элементы.Добавить("КнопкаСохранитьУстройство" + НастройкиУстройства.Код, Тип("КнопкаФормы"),ГруппаКнопки);
	НовыйЭлемент.ИмяКоманды = "СохранитьУстройство";
 
	Если НЕ НастройкиУстройства.Код = "000000001" Тогда
		НовыйЭлемент = ЭтаФорма.Элементы.Добавить("КнопкаУдалитьУстройство" + НастройкиУстройства.Код, Тип("КнопкаФормы"),ГруппаКнопки);
		НовыйЭлемент.ИмяКоманды = "УдалитьУстройство";
	КонецЕсли; 
	Элементы.СтраницыУстройства.ТекущаяСтраница = СтраницаУстройства;
	НастройкиУстройства = Неопределено;
	
КонецПроцедуры
